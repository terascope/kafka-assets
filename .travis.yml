# set the dist to bionic
dist: focal
os:
  - linux
language: node_js
node_js:
  - '14.21.3'
branches:
  only:
    - master
    - /^v\d+\.\d+\.\d+/
cache:
  npm: false
  yarn: false
services:
  - docker
if: NOT (branch = master AND type = push AND tag IS blank AND os = osx)
before_script:
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin;
before_install:
  # Install latest yarn
  - npm install --global yarn
  - export PATH="$HOME/.yarn/bin:$PATH"
  # Install teraslice-cli
  - yarn global add teraslice-cli
install:
  - yarn
  - yarn build
jobs:
  fast_finish: true

  include:
    - stage: 'Lint'
      name: 'Lint'
      language: node_js
      node_js: '14.21.3'
      script: 'yarn lint'

    - stage: 'Tests'
    - name: 'Node 14.21.3'
      if: branch = master AND type IN (pull_request)
      script: yarn test:all; teraslice-cli -v; teraslice-cli assets build --bundle-target node14

    - name: 'Node 16.19.1'
      node_js: '16.19.1'
      if: branch = master AND type IN (pull_request)
      script: yarn test:all; teraslice-cli -v; teraslice-cli assets build --bundle-target node16

    - name: 'Node 18.16.0'
      node_js: '18.16.0'
      if: branch = master AND type IN (pull_request)
      script: yarn test:all; teraslice-cli -v; teraslice-cli assets build --bundle-target node18

after_success:
  - bash <(curl -s https://codecov.io/bash)
after_failure:
  - tail -n 100 $KAFKA_HOME/*.log
before_deploy:
  - echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
deploy:
  - provider: script
    skip_cleanup: true
    script: yarn publish:changed
    on:
      tags: true
      condition: $TRAVIS_OS_NAME = linux
  - provider: releases
    api_key: $GITHUB_TOKEN
    prerelease: true
    file_glob: true
    file: build/*.zip
    skip_cleanup: true
    on:
      tags: true
